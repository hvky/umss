import herramientas.grafico.figuras.Figura;
import herramientas.grafico.figuras.Simple;
import herramientas.grafico.animaciones.Animacion;
import java.util.ArrayList;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.JRadioButton;
import javax.swing.ButtonGroup;

public class CrearAnimacion extends javax.swing.JFrame {
    private DefaultTableModel modelo = new DefaultTableModel();
    private PanelAnimacion panelAnim;
    private boolean infinito;

    public CrearAnimacion() {
        infinito = false;
        initComponents();
        modelo.addColumn("X");
        modelo.addColumn("Y");
        tablaPosiciones.setModel(modelo); 

        panelAnim = new PanelAnimacion();
        panelAnim.setSize(660,760);
        panelAnim.setLocation(0, 0);

        panelAni.removeAll();
        panelAni.add(panelAnim, BorderLayout.CENTER);
        panelAni.revalidate();
        panelAni.repaint();

        pack();
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        back = new JPanel();
        headA = new JPanel();
        IcUserA = new JLabel();
        botonCerrarSes = new JPanel();
        cerrarSes = new JLabel();
        LogoA = new JLabel();
        botonInicio = new JPanel();
        IcHouseA = new JLabel();
        panelAni = new JPanel();
        setAnim = new JPanel();
        figuraLetra = new JLabel();
        jComboBox1 = new JComboBox<>();
        pos = new JLabel();
        x = new JLabel();
        posX = new JTextField();
        separador1 = new JSeparator();
        y = new JLabel();
        posY = new JTextField();
        separador2 = new JSeparator();
        botAgregar = new JButton();
        botNuevo = new JButton();
        separador4 = new JSeparator();
        botElimTodo = new JButton();
        botElim = new JButton();
        botonTerminar = new JPanel();
        terminarA = new JLabel();
        botonGuardar = new JPanel();
        guardarA = new JLabel();
        jScrollPane1 = new JScrollPane();
        tablaPosiciones = new JTable();
        guardarLetra = new JLabel();
        jTextField1 = new JTextField();
        separador5 = new JSeparator();
        botonCrearAnimPred = new JPanel();
        guardarA1= new JLabel();
        buttonGroup1 = new ButtonGroup();
        opcionCiclada = new JRadioButton();
        opcionFinita = new JRadioButton();
        botonVoz = new JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        back.setBackground(new Color(255, 255, 255));
        back.setBorder(BorderFactory.createLineBorder(new Color(153, 153, 153)));
        back.setMinimumSize(new Dimension(1000, 800));
        back.setPreferredSize(new Dimension(1000, 800));
        back.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headA.setBackground(new Color(0, 0, 0));
        headA.setBorder(BorderFactory.createLineBorder(new Color(153, 153, 153)));
        headA.setPreferredSize(new Dimension(1000, 52));

        IcUserA.setIcon(new ImageIcon(getClass().getResource("/imagenes/people.png"))); // NOI18N
        IcUserA.setText("jLabel2");
        IcUserA.setAlignmentY(0.0F);
        IcUserA.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        botonCerrarSes.setBackground(new Color(203, 182, 163));
        botonCerrarSes.setCursor(new Cursor(Cursor.HAND_CURSOR));
        botonCerrarSes.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent evt) {
                    botonCerrarSesMouseClicked(evt);
                }
            });

        cerrarSes.setBackground(new Color(240, 235, 221));
        cerrarSes.setFont(new Font("Roboto Black", 1, 12)); // NOI18N
        cerrarSes.setForeground(new Color(255, 255, 255));
        cerrarSes.setHorizontalAlignment(SwingConstants.CENTER);
        cerrarSes.setText("Cerrar Sesion");
        cerrarSes.setCursor(new Cursor(Cursor.HAND_CURSOR));

        GroupLayout botonCerrarSesLayout = new GroupLayout(botonCerrarSes);
        botonCerrarSes.setLayout(botonCerrarSesLayout);
        botonCerrarSesLayout.setHorizontalGroup(
            botonCerrarSesLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, botonCerrarSesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cerrarSes, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        botonCerrarSesLayout.setVerticalGroup(
            botonCerrarSesLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(cerrarSes, GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
        );

        LogoA.setFont(new Font("Roboto", 1, 14)); // NOI18N
        LogoA.setForeground(new Color(255, 255, 255));
        LogoA.setIcon(new ImageIcon(getClass().getResource("/imagenes/logo2.png"))); // NOI18N
        LogoA.setText("ANIMUSIC");

        botonInicio.setBackground(new Color(0, 0, 0));
        botonInicio.setPreferredSize(new Dimension(45, 32));
        botonInicio.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent evt) {
                    botonInicioMouseClicked(evt);
                }
            });

        IcHouseA.setHorizontalAlignment(SwingConstants.CENTER);
        IcHouseA.setIcon(new ImageIcon(getClass().getResource("/imagenes/house2.png"))); // NOI18N
        IcHouseA.setCursor(new Cursor(Cursor.HAND_CURSOR));

        GroupLayout botonInicioLayout = new GroupLayout(botonInicio);
        botonInicio.setLayout(botonInicioLayout);
        botonInicioLayout.setHorizontalGroup(
            botonInicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(IcHouseA, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        botonInicioLayout.setVerticalGroup(
            botonInicioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(IcHouseA, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        GroupLayout headALayout = new GroupLayout(headA);
        headA.setLayout(headALayout);
        headALayout.setHorizontalGroup(
            headALayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, headALayout.createSequentialGroup()
                .addComponent(LogoA, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 676, Short.MAX_VALUE)
                .addComponent(botonInicio, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(botonCerrarSes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IcUserA, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        headALayout.setVerticalGroup(
            headALayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(headALayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(headALayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(LogoA, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
                    .addGroup(headALayout.createSequentialGroup()
                        .addGroup(headALayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(botonCerrarSes, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(IcUserA, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        back.add(headA, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 40));

        panelAni.setBackground(new Color(65, 65, 67));
        panelAni.setForeground(new Color(255, 255, 255));

        GroupLayout panelAniLayout = new GroupLayout(panelAni);
        panelAni.setLayout(panelAniLayout);
        panelAniLayout.setHorizontalGroup(
            panelAniLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );
        panelAniLayout.setVerticalGroup(
            panelAniLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 760, Short.MAX_VALUE)
        );

        back.add(panelAni, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 660, 760));

        setAnim.setBackground(new Color(65, 65, 67));
        setAnim.setBorder(BorderFactory.createLineBorder(new Color(204, 204, 204)));
        setAnim.setForeground(new Color(255, 255, 255));

        figuraLetra.setBackground(new Color(240, 235, 221));
        figuraLetra.setFont(new Font("Roboto Black", 1, 12)); // NOI18N
        figuraLetra.setForeground(new Color(255, 255, 255));
        figuraLetra.setHorizontalAlignment(SwingConstants.CENTER);
        figuraLetra.setText("FIGURA:");
        figuraLetra.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jComboBox1.setBackground(new Color(240, 235, 221));
        jComboBox1.setModel(new DefaultComboBoxModel<>(new String[] { ".", "Acordeon", "Corno", "Electrica", "Flauta", "Guitarra", "Mandolina", "Maracas", "Microfono", "Platillos", "Saxofon", "Tambor", "Teclado", "Trompeta", "Tuba", "Violin", "Xilofono" }));
        jComboBox1.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    jComboBox1ActionPerformed(evt);
                }
            });

        pos.setBackground(new Color(240, 235, 221));
        pos.setFont(new Font("Roboto Black", 1, 12)); // NOI18N
        pos.setForeground(new Color(255, 255, 255));
        pos.setHorizontalAlignment(SwingConstants.CENTER);
        pos.setText("POSICION:");
        pos.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        x.setBackground(new Color(240, 235, 221));
        x.setFont(new Font("Roboto Black", 1, 12)); // NOI18N
        x.setForeground(new Color(255, 255, 255));
        x.setHorizontalAlignment(SwingConstants.CENTER);
        x.setText("X:");
        x.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        posX.setBackground(new Color(65, 65, 67));
        posX.setForeground(new Color(204, 204, 204));
        posX.setBorder(null);
        posX.addKeyListener(new KeyListener() {
                public void keyTyped(KeyEvent evt) {
                    Utils.validarCampoSoloDigito(evt);
                }

                public void keyReleased(KeyEvent e){}

                public void keyPressed(KeyEvent e){}
            });

        separador1.setBackground(new Color(204, 204, 204));

        y.setBackground(new Color(240, 235, 221));
        y.setFont(new Font("Roboto Black", 1, 12)); // NOI18N
        y.setForeground(new Color(255, 255, 255));
        y.setHorizontalAlignment(SwingConstants.CENTER);
        y.setText("Y:");
        y.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        posY.setBackground(new Color(65, 65, 67));
        posY.setForeground(new Color(204, 204, 204));
        posY.setBorder(null);
        posY.addKeyListener(new KeyListener() {
                public void keyTyped(KeyEvent evt) {
                    Utils.validarCampoSoloDigito(evt);
                }

                public void keyReleased(KeyEvent e){}

                public void keyPressed(KeyEvent e){}
            });

        separador2.setBackground(new Color(204, 204, 204));

        botAgregar.setBackground(new Color(203, 182, 163));
        botAgregar.setFont(new Font("Roboto", 0, 12)); // NOI18N
        botAgregar.setText("Agregar");
        botAgregar.setBorder(null);
        botAgregar.setCursor(new Cursor(Cursor.HAND_CURSOR));
        botAgregar.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    botAgregarActionPerformed(evt);
                }
            });

        botNuevo.setBackground(new Color(203, 182, 163));
        botNuevo.setFont(new Font("Roboto", 0, 12)); // NOI18N
        botNuevo.setText("Nuevo");
        botNuevo.setBorder(null);
        botNuevo.setCursor(new Cursor(Cursor.HAND_CURSOR));
        botNuevo.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    botNuevoActionPerformed(evt);
                }
            });

        separador4.setBackground(new Color(204, 204, 204));

        botElimTodo.setBackground(new Color(203, 182, 163));
        botElimTodo.setFont(new Font("Roboto", 0, 12)); // NOI18N
        botElimTodo.setText("Eliminar todo");
        botElimTodo.setBorder(null);
        botElimTodo.setCursor(new Cursor(Cursor.HAND_CURSOR));
        botElimTodo.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    botElimTodoActionPerformed(evt);
                }
            });

        botElim.setBackground(new Color(203, 182, 163));
        botElim.setFont(new Font("Roboto", 0, 12)); // NOI18N
        botElim.setText("Eliminar");
        botElim.setBorder(null);
        botElim.setCursor(new Cursor(Cursor.HAND_CURSOR));
        botElim.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    botElimActionPerformed(evt);
                }
            });

        botonTerminar.setBackground(new Color(203, 182, 163));
        botonTerminar.setCursor(new Cursor(Cursor.HAND_CURSOR));
        botonTerminar.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent evt) {
                    botonTerminarMouseClicked(evt);
                }
            });

        terminarA.setBackground(new Color(240, 235, 221));
        terminarA.setFont(new Font("Roboto Black", 1, 12)); // NOI18N
        terminarA.setForeground(new Color(255, 255, 255));
        terminarA.setHorizontalAlignment(SwingConstants.CENTER);
        terminarA.setText("TERMINAR");
        terminarA.setCursor(new Cursor(Cursor.HAND_CURSOR));

        GroupLayout botonTerminarLayout = new GroupLayout(botonTerminar);
        botonTerminar.setLayout(botonTerminarLayout);
        botonTerminarLayout.setHorizontalGroup(
            botonTerminarLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(botonTerminarLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(terminarA, GroupLayout.PREFERRED_SIZE, 76, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        botonTerminarLayout.setVerticalGroup(
            botonTerminarLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, botonTerminarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(terminarA, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
        );

        botonGuardar.setBackground(new Color(211, 137, 124));
        botonGuardar.setCursor(new Cursor(Cursor.HAND_CURSOR));
        botonGuardar.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent evt) {
                    botonGuardarMouseClicked(evt);
                }
            });

        guardarA.setBackground(new Color(240, 235, 221));
        guardarA.setFont(new Font("Roboto Black", 1, 12)); // NOI18N
        guardarA.setForeground(new Color(255, 255, 255));
        guardarA.setHorizontalAlignment(SwingConstants.CENTER);
        guardarA.setText("GUARDAR");
        guardarA.setCursor(new Cursor(Cursor.HAND_CURSOR));

        GroupLayout botonGuardarLayout = new GroupLayout(botonGuardar);
        botonGuardar.setLayout(botonGuardarLayout);
        botonGuardarLayout.setHorizontalGroup(
            botonGuardarLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(botonGuardarLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(guardarA, GroupLayout.PREFERRED_SIZE, 76, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        botonGuardarLayout.setVerticalGroup(
            botonGuardarLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, botonGuardarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(guardarA, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
        );

        tablaPosiciones.setBackground(new Color(240, 235, 221));
        tablaPosiciones.setFont(new Font("Roboto", 0, 12)); // NOI18N
        tablaPosiciones.setModel(new DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Title 1", "Title 2", "Title 3", "Title 4"
                }
            ));
        tablaPosiciones.setGridColor(new Color(255, 255, 255));
        tablaPosiciones.setSelectionForeground(new Color(255, 102, 102));
        jScrollPane1.setViewportView(tablaPosiciones);

        guardarLetra.setBackground(new Color(240, 235, 221));
        guardarLetra.setFont(new Font("Roboto Black", 1, 12)); // NOI18N
        guardarLetra.setForeground(new Color(255, 255, 255));
        guardarLetra.setHorizontalAlignment(SwingConstants.CENTER);
        guardarLetra.setText("Guardar como:");
        guardarLetra.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jTextField1.setBackground(new Color(65, 65, 67));
        jTextField1.setForeground(new Color(204, 204, 204));
        jTextField1.setText("Animacion");
        jTextField1.addMouseListener(new MouseAdapter() {
                public void mousePressed(MouseEvent evt) {
                    jTextField1ActionPerformed(evt);
                }
            });

        separador5.setBackground(new Color(204, 204, 204));

        botonCrearAnimPred.setBackground(new Color(200, 160, 99));
        botonCrearAnimPred.setCursor(new Cursor(Cursor.HAND_CURSOR));
        botonCrearAnimPred.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent evt) {
                    botonCrearAnimPredMouseClicked(evt);
                }
            });

        guardarA1.setBackground(new Color(240, 235, 221));
        guardarA1.setFont(new Font("Roboto Black", 1, 12)); // NOI18N
        guardarA1.setForeground(new Color(255, 255, 255));
        guardarA1.setHorizontalAlignment(SwingConstants.CENTER);
        guardarA1.setText("CREAR ANIMACION ESPECIAL");
        guardarA1.setCursor(new Cursor(Cursor.HAND_CURSOR));

        GroupLayout botonCrearAnimPredLayout = new GroupLayout(botonCrearAnimPred);
        botonCrearAnimPred.setLayout(botonCrearAnimPredLayout);
        botonCrearAnimPredLayout.setHorizontalGroup(
            botonCrearAnimPredLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, botonCrearAnimPredLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(guardarA1)
                .addGap(36, 36, 36))
        );
        botonCrearAnimPredLayout.setVerticalGroup(
            botonCrearAnimPredLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, botonCrearAnimPredLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(guardarA1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE))
        );

        buttonGroup1.add(opcionCiclada);
        opcionCiclada.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        opcionCiclada.setForeground(new java.awt.Color(255, 255, 255));
        opcionCiclada.setText("Ciclada");
        opcionCiclada.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    infinito = true;
                    if (panelAnim.getFiguras().size() > 0) panelAnim.getFigura(0).detenerAnimacion();
                }
            });

        buttonGroup1.add(opcionFinita);
        opcionFinita.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        opcionFinita.setForeground(new java.awt.Color(255, 255, 255));
        opcionFinita.setText("Finita");
        opcionFinita.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    infinito = false;
                    if (panelAnim.getFiguras().size() > 0) panelAnim.getFigura(0).detenerAnimacion();
                }
            });

        botonVoz.setBackground(new java.awt.Color(203, 182, 163));
        botonVoz.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        botonVoz.setText("ON VOZ");
        botonVoz.setBorder(null);
        botonVoz.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonVoz.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    botonVozActionPerformed(evt);
                }
            });

        javax.swing.GroupLayout setAnimLayout = new javax.swing.GroupLayout(setAnim);
        setAnim.setLayout(setAnimLayout);
        setAnimLayout.setHorizontalGroup(
            setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(separador4)
            .addComponent(separador5)
            .addGroup(setAnimLayout.createSequentialGroup()
                .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, setAnimLayout.createSequentialGroup()
                            .addGap(44, 44, 44)
                            .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(separador1)
                                .addComponent(posX, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(54, 54, 54)
                            .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(separador2)
                                .addComponent(posY, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(setAnimLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(setAnimLayout.createSequentialGroup()
                                    .addComponent(figuraLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(setAnimLayout.createSequentialGroup()
                                    .addComponent(botElim, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(54, 54, 54)
                                    .addComponent(botElimTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(setAnimLayout.createSequentialGroup()
                                    .addComponent(botAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(54, 54, 54)
                                    .addComponent(botNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(botonVoz, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(setAnimLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setAnimLayout.createSequentialGroup()
                                .addComponent(pos, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(213, 213, 213))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(setAnimLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(opcionCiclada)
                                        .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(guardarLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(opcionFinita)
                                    .addComponent(botonTerminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField1)))))
                    .addGroup(setAnimLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(botonCrearAnimPred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        setAnimLayout.setVerticalGroup(
            setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setAnimLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(figuraLetra)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pos)
                    .addComponent(botonVoz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(setAnimLayout.createSequentialGroup()
                        .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(posX)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, setAnimLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(separador1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(setAnimLayout.createSequentialGroup()
                        .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(posY)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, setAnimLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(separador2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(separador4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botElim, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botElimTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opcionCiclada)
                    .addComponent(opcionFinita))
                .addGap(18, 18, 18)
                .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarLetra)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(setAnimLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonTerminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(separador5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonCrearAnimPred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        back.add(setAnim, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, 340, 760));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(back, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(back, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>    

    private void botAgregarActionPerformed(ActionEvent evt) {                                           
        String [] agregar = new String[2];
        agregar[0]= posX.getText();
        agregar[1]= posY.getText();
        modelo.addRow(agregar);
    }

    private void botNuevoActionPerformed(ActionEvent evt) {                                         
        posX.setText("");
        posY.setText("");
    }                                        

    private void botElimTodoActionPerformed(ActionEvent evt) {                                            
        int eliTotal = tablaPosiciones.getRowCount();
        for(int i = eliTotal - 1; i >= 0; i--){
            modelo.removeRow(i);
        }
    }                                           

    private void botElimActionPerformed(ActionEvent evt) {
        int elim = tablaPosiciones.getSelectedRow();
        if(elim >= 0){
            modelo.removeRow(elim);
        }else{
            JOptionPane.showMessageDialog(null, "No hay datos que eliminar", null, JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void botonVozActionPerformed(java.awt.event.ActionEvent evt) {
        Utils.vozFiguras(jComboBox1);
    }

    private void jComboBox1ActionPerformed(ActionEvent evt) {
        if (panelAnim.getFiguras().size() > 0) panelAnim.borrarTodo();

        Figura figura = Utils.crearFigura((String) jComboBox1.getSelectedItem(), null);
        figura.setPanel(panelAnim);
        panelAnim.agregarFigura(figura);

        if (figura instanceof Simple) return;
        Archivo.escribirEstadisticaFigura(figura.getNombre());
    }
    
    private void botonGuardarMouseClicked(MouseEvent evt) {
        Animacion animacion = obtenerAnimacion();
        if (animacion == null) return;

        Serializado.serializarAnimacion(animacion);
        JOptionPane.showMessageDialog(null, "Animacion Creada", null, JOptionPane.INFORMATION_MESSAGE);
        dispose();
        new CrearAnimacion().setVisible(true);
    }

    private void botonTerminarMouseClicked(MouseEvent evt) {
        Animacion animacion = obtenerAnimacion(); 
        if (animacion == null) return;

        Figura fig = panelAnim.getFigura(0);
        fig.setAnimacion(animacion);
        fig.animar();
    }

    private Animacion obtenerAnimacion() {
        if (panelAnim.getFiguras().size() == 0) {
            JOptionPane.showMessageDialog(null, "Seleccione una figura!", null, JOptionPane.WARNING_MESSAGE);
            return null;
        }

        ArrayList<Point> puntos = new ArrayList<Point>();
        int x, y;
        String valor;

        for (int i = 0; i < modelo.getRowCount(); i++) {
            valor = modelo.getValueAt(i, 0).toString();
            x = Integer.parseInt(valor);
            valor = modelo.getValueAt(i, 1).toString();
            y = Integer.parseInt(valor);
            puntos.add(new Point(x, y));
        }

        return new Animacion(panelAnim.getFigura(0).getPosicion(), puntos, infinito, jTextField1.getText());
    }

    private void jTextField1ActionPerformed(MouseEvent evt) {
        if (jTextField1.getText().equals("Animacion")) {
            jTextField1.setText("");
            jTextField1.setForeground(Color.white);
        }
    }

    private void botonInicioMouseClicked(MouseEvent evt) {
        dispose();
        new Inicio().setVisible(true);
    } 

    private void botonCerrarSesMouseClicked(MouseEvent evt) {
        dispose();
        new Login().setVisible(true);
    }            

    private void botonCrearAnimPredMouseClicked(MouseEvent evt) {
        dispose();
        new CrearAnimEspecial().setVisible(true);
    }  

    public static void main(String args[]) {
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearAnimacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearAnimacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearAnimacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearAnimacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new CrearAnimacion().setVisible(true);
                }
            });
    }

    private JLabel IcHouseA, IcUserA, LogoA, cerrarSes, figuraLetra, guardarA, guardarLetra, terminarA, guardarA1, pos, x, y;
    private JPanel back, headA, panelAni, setAnim, botonCerrarSes, botonGuardar, botonInicio, botonTerminar, botonCrearAnimPred;
    private JButton botAgregar,botElim, botElimTodo, botNuevo, botonVoz;
    private JComboBox<String> jComboBox1;
    private JScrollPane jScrollPane1;
    private JTextField jTextField1, posX, posY;
    private JSeparator separador1, separador2, separador4,separador5;
    private JTable tablaPosiciones;
    private ButtonGroup buttonGroup1;
    private JRadioButton opcionCiclada, opcionFinita;
}
