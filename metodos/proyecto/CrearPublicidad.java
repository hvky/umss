import herramientas.grafico.figuras.Figura;
import herramientas.grafico.animaciones.Animacion;

import java.util.ArrayList;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JFrame;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;


public class CrearPublicidad extends JFrame {
    DefaultTableModel modelo = new DefaultTableModel();
    private PanelDibujo panelDib;

    public CrearPublicidad() {
        initComponents();
        agregarItemsComboBox();
        String[]titulo= new String[]{"Figura", "Animación"};
        modelo.setColumnIdentifiers(titulo);
        tabla.setModel(modelo);

        panelDib = new PanelDibujo();  
        panelDib.setSize(830,910);
        panelDib .setLocation(0, 0);

        panel.removeAll();
        panel.add(panelDib , BorderLayout.CENTER);
        panel.revalidate();
        panel.repaint();

        pack();
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setResizable(false);
    }

    /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        back = new javax.swing.JPanel();
        head = new javax.swing.JPanel();
        Logo = new javax.swing.JLabel();
        IcUser = new javax.swing.JLabel();
        botonInicio = new javax.swing.JPanel();
        IcHouseA = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        setHerr = new javax.swing.JPanel();
        botonCrearFigComp = new javax.swing.JPanel();
        letraCrearFigComp = new javax.swing.JLabel();
        figuraLetra = new javax.swing.JLabel();
        PreLetra = new javax.swing.JLabel();
        listaFigs = new javax.swing.JComboBox<>();
        compuestoLetra = new javax.swing.JLabel();
        listaSets = new javax.swing.JComboBox<>();
        posicionLetra = new javax.swing.JLabel();
        x = new javax.swing.JLabel();
        posX = new javax.swing.JTextField();
        separador1 = new javax.swing.JSeparator();
        y = new javax.swing.JLabel();
        posY = new javax.swing.JTextField();
        separador2 = new javax.swing.JSeparator();
        botonAñadir = new javax.swing.JPanel();
        añadirA = new javax.swing.JLabel();
        botonEliminar = new javax.swing.JPanel();
        eliminarA = new javax.swing.JLabel();
        botonEliTodo = new javax.swing.JPanel();
        eliTodoA = new javax.swing.JLabel();
        separador4 = new javax.swing.JSeparator();
        animacLetra = new javax.swing.JLabel();
        animPreLetra = new javax.swing.JLabel();
        animPred = new javax.swing.JComboBox<>();
        pararAnimLetra = new javax.swing.JLabel();
        animPerson = new javax.swing.JComboBox<>();
        botonAnimar = new javax.swing.JPanel();
        animarA = new javax.swing.JLabel();
        botonParar = new javax.swing.JPanel();
        pararA = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        botonMover = new javax.swing.JPanel();
        moverA1 = new javax.swing.JLabel();
        //botonVoz = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Title 1", "Title 2", "Title 3", "Title 4"
                }
            ));
        jScrollPane1.setViewportView(jTable1);

        back.setBackground(new java.awt.Color(255, 255, 255));
        back.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        back.setMinimumSize(new java.awt.Dimension(0, 0));
        back.setPreferredSize(new java.awt.Dimension(1280, 950));
        back.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        head.setBackground(new java.awt.Color(0, 0, 0));
        head.setPreferredSize(new java.awt.Dimension(1280, 40));

        Logo.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        Logo.setForeground(new java.awt.Color(255, 255, 255));
        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logo2.png"))); // NOI18N
        Logo.setText("ANIMUSIC");

        IcUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/people.png"))); // NOI18N
        IcUser.setText("jLabel2");
        IcUser.setAlignmentY(0.0F);

        botonInicio.setBackground(new java.awt.Color(0, 0, 0));
        botonInicio.setPreferredSize(new java.awt.Dimension(45, 32));
        botonInicio.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    botonInicioMouseClicked(evt);
                }
            });

        IcHouseA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        IcHouseA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/house2.png"))); // NOI18N
        IcHouseA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout botonInicioLayout = new javax.swing.GroupLayout(botonInicio);
        botonInicio.setLayout(botonInicioLayout);
        botonInicioLayout.setHorizontalGroup(
            botonInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonInicioLayout.createSequentialGroup()
                .addComponent(IcHouseA)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        botonInicioLayout.setVerticalGroup(
            botonInicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(IcHouseA, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout headLayout = new javax.swing.GroupLayout(head);
        head.setLayout(headLayout);
        headLayout.setHorizontalGroup(
            headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1054, Short.MAX_VALUE)
                .addComponent(botonInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IcUser, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );
        headLayout.setVerticalGroup(
            headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headLayout.createSequentialGroup()
                .addGroup(headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IcUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Logo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        back.add(head, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 40));

        panel.setBackground(new java.awt.Color(65, 65, 67));
        panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 828, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 908, Short.MAX_VALUE)
        );

        back.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 830, 910));

        setHerr.setBackground(new java.awt.Color(65, 65, 67));
        setHerr.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        setHerr.setForeground(new java.awt.Color(255, 255, 255));

        botonCrearFigComp.setBackground(new java.awt.Color(211, 137, 124));
        botonCrearFigComp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonCrearFigComp.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    botonCrearFigCompMouseClicked(evt);
                }
            });

        letraCrearFigComp.setBackground(new java.awt.Color(240, 235, 221));
        letraCrearFigComp.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        letraCrearFigComp.setForeground(new java.awt.Color(255, 255, 255));
        letraCrearFigComp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        letraCrearFigComp.setText("CREAR SET DE INSTRUMENTOS MUSICALES");
        letraCrearFigComp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout botonCrearFigCompLayout = new javax.swing.GroupLayout(botonCrearFigComp);
        botonCrearFigComp.setLayout(botonCrearFigCompLayout);
        botonCrearFigCompLayout.setHorizontalGroup(
            botonCrearFigCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonCrearFigCompLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(letraCrearFigComp)
                .addContainerGap())
        );
        botonCrearFigCompLayout.setVerticalGroup(
            botonCrearFigCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonCrearFigCompLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(letraCrearFigComp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        figuraLetra.setBackground(new java.awt.Color(240, 235, 221));
        figuraLetra.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        figuraLetra.setForeground(new java.awt.Color(255, 255, 255));
        figuraLetra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        figuraLetra.setText("FIGURA ");
        figuraLetra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        PreLetra.setBackground(new java.awt.Color(240, 235, 221));
        PreLetra.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        PreLetra.setForeground(new java.awt.Color(255, 255, 255));
        PreLetra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PreLetra.setText("Predeterminada:");
        PreLetra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        listaFigs.setBackground(new java.awt.Color(240, 235, 221));
        listaFigs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ".", "Acordeon", "Corno", "Electrica", "Flauta", "Guitarra", "Mandolina", "Maracas", "Microfono", "Platillos", "Saxofon", "Tambor", "Teclado", "Trompeta", "Tuba", "Violin", "Xilofono" }));
        listaFigs.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    listaFigsActionPerformed(evt);
                }
            });

        compuestoLetra.setBackground(new java.awt.Color(240, 235, 221));
        compuestoLetra.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        compuestoLetra.setForeground(new java.awt.Color(255, 255, 255));
        compuestoLetra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        compuestoLetra.setText("Compuesta:");
        compuestoLetra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        listaSets.setBackground(new java.awt.Color(240, 235, 221));
        // listaSets.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ".", "set1", "set2", "set3" }));
        listaSets.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    listaSetsActionPerformed(evt);
                }
            });

        posicionLetra.setBackground(new java.awt.Color(240, 235, 221));
        posicionLetra.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        posicionLetra.setForeground(new java.awt.Color(255, 255, 255));
        posicionLetra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        posicionLetra.setText("POSICIÓN:");
        posicionLetra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        x.setBackground(new java.awt.Color(240, 235, 221));
        x.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        x.setForeground(new java.awt.Color(255, 255, 255));
        x.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        x.setText("X:");
        x.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        posX.setBackground(new java.awt.Color(65, 65, 67));
        posX.setForeground(new java.awt.Color(204, 204, 204));
        posX.setBorder(null);
        posX.addKeyListener(new KeyListener() {
                public void keyTyped(KeyEvent evt) {
                    Utils.validarCampoSoloDigito(evt);
                }
                
                public void keyReleased(KeyEvent e){}
                public void keyPressed(KeyEvent e){}
            });

        separador1.setBackground(new java.awt.Color(204, 204, 204));

        y.setBackground(new java.awt.Color(240, 235, 221));
        y.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        y.setForeground(new java.awt.Color(255, 255, 255));
        y.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        y.setText("Y:");
        y.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        posY.setBackground(new java.awt.Color(65, 65, 67));
        posY.setForeground(new java.awt.Color(204, 204, 204));
        posY.setBorder(null);
        posY.addKeyListener(new KeyListener() {
                public void keyTyped(KeyEvent evt) {
                    Utils.validarCampoSoloDigito(evt);
                }
                
                public void keyReleased(KeyEvent e){}
                public void keyPressed(KeyEvent e){}
            });

        separador2.setBackground(new java.awt.Color(204, 204, 204));

        botonAñadir.setBackground(new java.awt.Color(200, 160, 99));
        botonAñadir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonAñadir.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    botonAñadirMouseClicked(evt);
                }
            });

        añadirA.setBackground(new java.awt.Color(240, 235, 221));
        añadirA.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        añadirA.setForeground(new java.awt.Color(255, 255, 255));
        añadirA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        añadirA.setText("AÑADIR");
        añadirA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout botonAñadirLayout = new javax.swing.GroupLayout(botonAñadir);
        botonAñadir.setLayout(botonAñadirLayout);
        botonAñadirLayout.setHorizontalGroup(
            botonAñadirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonAñadirLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(añadirA, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        botonAñadirLayout.setVerticalGroup(
            botonAñadirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonAñadirLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(añadirA, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        botonEliminar.setBackground(new java.awt.Color(200, 160, 99));
        botonEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    botonEliminarMouseClicked(evt);
                }
            });

        eliminarA.setBackground(new java.awt.Color(240, 235, 221));
        eliminarA.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        eliminarA.setForeground(new java.awt.Color(255, 255, 255));
        eliminarA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eliminarA.setText("ELIMINAR");
        eliminarA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout botonEliminarLayout = new javax.swing.GroupLayout(botonEliminar);
        botonEliminar.setLayout(botonEliminarLayout);
        botonEliminarLayout.setHorizontalGroup(
            botonEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonEliminarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(eliminarA, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        botonEliminarLayout.setVerticalGroup(
            botonEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonEliminarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(eliminarA, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        botonEliTodo.setBackground(new java.awt.Color(211, 137, 124));
        botonEliTodo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonEliTodo.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    botonEliTodoMouseClicked(evt);
                }
            });

        eliTodoA.setBackground(new java.awt.Color(211, 137, 124));
        eliTodoA.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        eliTodoA.setForeground(new java.awt.Color(255, 255, 255));
        eliTodoA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eliTodoA.setText("ELIMINAR TODO");
        eliTodoA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout botonEliTodoLayout = new javax.swing.GroupLayout(botonEliTodo);
        botonEliTodo.setLayout(botonEliTodoLayout);
        botonEliTodoLayout.setHorizontalGroup(
            botonEliTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonEliTodoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(eliTodoA, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                .addContainerGap())
        );
        botonEliTodoLayout.setVerticalGroup(
            botonEliTodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonEliTodoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(eliTodoA, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        separador4.setBackground(new java.awt.Color(204, 204, 204));

        animacLetra.setFont(new java.awt.Font("Roboto Black", 0, 14)); // NOI18N
        animacLetra.setForeground(new java.awt.Color(255, 255, 255));
        animacLetra.setText("ANIMACIÓN:");

        animPreLetra.setBackground(new java.awt.Color(240, 235, 221));
        animPreLetra.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        animPreLetra.setForeground(new java.awt.Color(255, 255, 255));
        animPreLetra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        animPreLetra.setText("Predeterminada");
        animPreLetra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        animPred.setBackground(new java.awt.Color(240, 235, 221));
        animPred.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sin Animación", "Caida Libre", "Rebote Horizontal", "Movimientos Horizontales", "Movimientos Laterales", "Trayectoria Cruz", "Trayectoria Cuadrada" }));
        animPred.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    animPredActionPerformed(evt);
                }
            });

        pararAnimLetra.setBackground(new java.awt.Color(240, 235, 221));
        pararAnimLetra.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        pararAnimLetra.setForeground(new java.awt.Color(255, 255, 255));
        pararAnimLetra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pararAnimLetra.setText("Personalizada");
        pararAnimLetra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        animPerson.setBackground(new java.awt.Color(240, 235, 221));
        // animPerson.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sin Animación", "animaciónEspecial1", "animaciónEspecial2" }));
        animPerson.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    animPersonActionPerformed(evt);
                }
            });

        botonAnimar.setBackground(new java.awt.Color(200, 160, 99));
        botonAnimar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonAnimar.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    botonAnimarMouseClicked(evt);
                }
            });

        animarA.setBackground(new java.awt.Color(240, 235, 221));
        animarA.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        animarA.setForeground(new java.awt.Color(255, 255, 255));
        animarA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        animarA.setText("ANIMAR");
        animarA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout botonAnimarLayout = new javax.swing.GroupLayout(botonAnimar);
        botonAnimar.setLayout(botonAnimarLayout);
        botonAnimarLayout.setHorizontalGroup(
            botonAnimarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonAnimarLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(animarA, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        botonAnimarLayout.setVerticalGroup(
            botonAnimarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonAnimarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(animarA, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        botonParar.setBackground(new java.awt.Color(211, 137, 124));
        botonParar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonParar.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    botonPararMouseClicked(evt);
                }
            });

        pararA.setBackground(new java.awt.Color(240, 235, 221));
        pararA.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        pararA.setForeground(new java.awt.Color(255, 255, 255));
        pararA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pararA.setText("PARAR");
        pararA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout botonPararLayout = new javax.swing.GroupLayout(botonParar);
        botonParar.setLayout(botonPararLayout);
        botonPararLayout.setHorizontalGroup(
            botonPararLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonPararLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(pararA, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        botonPararLayout.setVerticalGroup(
            botonPararLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonPararLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pararA, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabla.setBackground(new java.awt.Color(240, 235, 221));
        tabla.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        tabla.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null},
                    {null, null},
                    {null, null},
                    {null, null}
                },
                new String [] {
                    "Title 1", "Title 2"
                }
            ));
        tabla.setGridColor(new java.awt.Color(255, 255, 255));
        tabla.setSelectionForeground(new java.awt.Color(255, 102, 102));
        jScrollPane2.setViewportView(tabla);

        botonMover.setBackground(new java.awt.Color(200, 160, 99));
        botonMover.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonMover.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    botonMoverMouseClicked(evt);
                }
            });

        moverA1.setBackground(new java.awt.Color(240, 235, 221));
        moverA1.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        moverA1.setForeground(new java.awt.Color(255, 255, 255));
        moverA1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        moverA1.setText("MOVER");
        moverA1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout botonMoverLayout = new javax.swing.GroupLayout(botonMover);
        botonMover.setLayout(botonMoverLayout);
        botonMoverLayout.setHorizontalGroup(
            botonMoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonMoverLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(moverA1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        botonMoverLayout.setVerticalGroup(
            botonMoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, botonMoverLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(moverA1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        /*
        botonVoz.setBackground(new java.awt.Color(203, 182, 163));
        botonVoz.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        botonVoz.setText("ON VOZ");
        botonVoz.setBorder(null);
        botonVoz.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonVoz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVozActionPerformed(evt);
            }
        });*/

        javax.swing.GroupLayout setHerrLayout = new javax.swing.GroupLayout(setHerr);
        setHerr.setLayout(setHerrLayout);
        setHerrLayout.setHorizontalGroup(
            setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setHerrLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(setHerrLayout.createSequentialGroup()
                        .addComponent(animacLetra)
                        .addContainerGap(340, Short.MAX_VALUE))
                    .addGroup(setHerrLayout.createSequentialGroup()
                        .addComponent(botonAnimar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(botonParar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(setHerrLayout.createSequentialGroup()
                        .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(animPred, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(animPreLetra))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pararAnimLetra)
                            .addComponent(animPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))))
            .addGroup(setHerrLayout.createSequentialGroup()
                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setHerrLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonCrearFigComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(setHerrLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setHerrLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(setHerrLayout.createSequentialGroup()
                                        .addComponent(PreLetra)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(setHerrLayout.createSequentialGroup()
                                        .addComponent(compuestoLetra)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(listaSets, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setHerrLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                                .addComponent(listaFigs, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(setHerrLayout.createSequentialGroup()
                                .addComponent(figuraLetra)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 294, Short.MAX_VALUE))
                            .addGroup(setHerrLayout.createSequentialGroup()
                                .addComponent(posicionLetra)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, setHerrLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                //.addComponent(botonVoz, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                ))))
                .addGap(63, 63, 63))
            .addGroup(setHerrLayout.createSequentialGroup()
                .addComponent(separador4)
                .addContainerGap())
            .addGroup(setHerrLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(setHerrLayout.createSequentialGroup()
                        .addComponent(botonMover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonEliTodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(setHerrLayout.createSequentialGroup()
                        .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(setHerrLayout.createSequentialGroup()
                                .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(separador1)
                                    .addComponent(posX, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(54, 54, 54)
                                .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(separador2)
                                    .addComponent(posY, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(botonAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(39, 39, 39))
        );
        setHerrLayout.setVerticalGroup(
            setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(setHerrLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(botonCrearFigComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(figuraLetra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PreLetra)
                    .addComponent(listaFigs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compuestoLetra)
                    .addComponent(listaSets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(posicionLetra)
                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(setHerrLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(setHerrLayout.createSequentialGroup()
                                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(posX)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, setHerrLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(separador1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(setHerrLayout.createSequentialGroup()
                                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(posY)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, setHerrLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(10, 10, 10)
                                .addComponent(separador2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(setHerrLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        //.addComponent(botonVoz, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        ))
                .addGap(18, 18, 18)
                .addComponent(botonAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonEliTodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonMover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(separador4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(animacLetra)
                .addGap(27, 27, 27)
                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(setHerrLayout.createSequentialGroup()
                        .addComponent(animPreLetra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(animPred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(setHerrLayout.createSequentialGroup()
                        .addComponent(pararAnimLetra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(animPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(setHerrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonAnimar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonParar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81))
        );

        back.add(setHerr, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 40, 450, 910));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(back, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>         

    private void botonCrearFigCompMouseClicked(MouseEvent evt) {
        // dispose();
        new CrearSet().setVisible(true);
        agregarItemsComboBox();
    }

    private void botonAñadirMouseClicked(MouseEvent evt) {
        String figs,sets, agregar[];
        agregar = new String[2];
        figs = listaFigs.getSelectedItem().toString();
        sets = listaSets.getSelectedItem().toString();

        if (!figs.equals(".") && !sets.equals(".")) {
            JOptionPane.showMessageDialog(null,"Selecciona una sola figura!" , null, JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (figs.equals(".") && sets.equals(".")) {
            JOptionPane.showMessageDialog(null,"Selecciona una figura!" , null, JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (posX.getText().equals("") || posY.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Indica la posicion" , null, JOptionPane.WARNING_MESSAGE);
            return;
        }

        Figura fig = null;
        Point posicion = getPosicion();

        if(sets.equals(".")) {
            fig = Utils.crearFigura(figs, posicion);
        }

        if(figs.equals(".")) {
            ArrayList<Figura> figuras = Serializado.getFiguras();
            Figura f;

            for (int i = 0; i < figuras.size(); i++) {
                f = figuras.get(i);

                if (f.getNombre().equals(sets)) {
                    fig = f;
                    i = figuras.size();
                }
            }

            fig.setPosicion(posicion);
        }

        fig.setPanel(panelDib);
        agregar [0]= fig.toString();
        agregar [1]= "Sin animacion";
        modelo.addRow(agregar);
        panelDib.agregarFigura(fig);
    }

    private void botonEliminarMouseClicked(MouseEvent evt) {
        int elim = tabla.getSelectedRow();
        if(elim >= 0){
            modelo.removeRow(elim);
            panelDib.eliminarFigura(elim);
        }else{
            JOptionPane.showMessageDialog(null, "No hay datos que eliminar", null, JOptionPane.WARNING_MESSAGE);
        }
    }

    private void botonMoverMouseClicked(MouseEvent evt) {
        int pos = tabla.getSelectedRow();
        if (pos < 0) {
            JOptionPane.showMessageDialog(null, "Selecciona una figura de la tabla", null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (posX.getText().equals("") || posY.getText().equals("")) {
            JOptionPane.showMessageDialog(null,"Indica la posicion" , null, JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Figura f = panelDib.getFigura(pos);
        Point posicion = getPosicion();
        f.mover(posicion);
        
        tabla.setValueAt(f.toString(), pos, 0);
    }
    
    private void listaFigsActionPerformed(ActionEvent evt) {
        String select = (String) listaFigs.getSelectedItem();
        
        if (select.equals(".")) return;
        
        Figura figura = Utils.crearFigura(select, null);
        Archivo.escribirEstadisticaFigura(figura.getNombre());
    }

    private void listaSetsActionPerformed(ActionEvent evt) {
        String select = (String) listaSets.getSelectedItem();
        
        if (select == null) return;
        if (select.equals(".")) return;
        
        ArrayList<Figura> figuras = Serializado.getFiguras();
        Figura f, fig = null;

        for (int i = 0; i < figuras.size(); i++) {
            f = figuras.get(i);

            if (f.getNombre().equals(select)) {
                fig = f;
                i = figuras.size();
            }
        }
        
        if (fig == null) return;
        Archivo.escribirEstadisticaFigura(fig.getNombre());
    }

    private void animPredActionPerformed(ActionEvent evt) {
        String select = (String) animPred.getSelectedItem();
        Animacion a = Utils.crearAnimacion(select, null);
        if (a != null) Archivo.escribirEstadisticaAnimacion(a.getNombre());
    }                                        

    private void animPersonActionPerformed(ActionEvent evt) {
        String select = (String) animPerson.getSelectedItem();
        
        ArrayList<Animacion> animaciones = Serializado.getAnimaciones();
        Animacion a, animacion = null;

        for (int i = 0; i < animaciones.size(); i++) {
            a = animaciones.get(i);

            if (a.getNombre().equals(animPerson.getSelectedItem())) {
                animacion = a;
                i = animaciones.size();
            }
        }
        
        if (animacion == null) return;
        Archivo.escribirEstadisticaAnimacion(animacion.getNombre());
    }

    private void botonAnimarMouseClicked(MouseEvent evt) {
        int pos = tabla.getSelectedRow();

        if (pos < 0) {
            JOptionPane.showMessageDialog(null, "Selecciona una figura de la tabla", null, JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (!animPerson.getSelectedItem().equals("Sin Animación") && !animPred.getSelectedItem().equals("Sin Animación")) {
            JOptionPane.showMessageDialog(null, "Selecciona una sola animacion!", null, JOptionPane.WARNING_MESSAGE);
            return;
        }

        Figura fig = panelDib.getFigura(pos);
        Animacion animacion = null;

        if (animPerson.getSelectedItem().equals("Sin Animación")) {
            animacion = Utils.crearAnimacion(animPred.getSelectedItem().toString(), fig.getPosicion());
        }

        if (animPred.getSelectedItem().equals("Sin Animación")) {
            ArrayList<Animacion> animaciones = Serializado.getAnimaciones();
            Animacion a;

            for (int i = 0; i < animaciones.size(); i++) {
                a = animaciones.get(i);

                if (a.getNombre().equals(animPerson.getSelectedItem())) {
                    animacion = a;
                    i = animaciones.size();
                }
            }
        }

        fig.setAnimacion(animacion);
        fig.animar();

        String ani = (fig.getAnimacion() == null) ? "Sin animacion" : fig.getAnimacion().getNombre();
        tabla.setValueAt(ani, pos, 1);
    }

    private void botonPararMouseClicked(MouseEvent evt) {
        int pos = tabla.getSelectedRow();
        if (pos < 0) {
            JOptionPane.showMessageDialog(null, "Selecciona una figura de la tabla", null, JOptionPane.WARNING_MESSAGE);
            return;
        }

        panelDib.getFigura(pos).detenerAnimacion();
        tabla.setValueAt("Sin animacion", pos, 1);
    }                                  

    private void botonInicioMouseClicked(MouseEvent evt) {
        dispose();
        new Inicio().setVisible(true);
    }                                        

    private void botonEliTodoMouseClicked(MouseEvent evt) {
        panelDib.borrarTodo();

        int eliTotal = tabla.getRowCount();
        for(int i = eliTotal - 1; i >= 0; i--){
            modelo.removeRow(i);
        }
    }
    
    private Point getPosicion() {
        return Utils.crearPosicion(posX.getText(), posY.getText());
    }

    private void agregarItemsComboBox() {
        animPerson.removeAllItems();
        animPerson.addItem("Sin Animación");

        for (Animacion a : Serializado.getAnimaciones()) {
            animPerson.addItem(a.getNombre());
        }

        listaSets.removeAllItems();
        listaSets.addItem(".");

        for (Figura f : Serializado.getFiguras()) {
            listaSets.addItem(f.getNombre());
        }
    }
    
    private void botonVozActionPerformed(java.awt.event.ActionEvent evt) {
        Utils.vozFiguras(listaFigs);
    }

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearPublicidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearPublicidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearPublicidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearPublicidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new CrearPublicidad().setVisible(true);
                }
            });
    }

    private javax.swing.JLabel IcHouseA;
    private javax.swing.JLabel IcUser;
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel PreLetra;
    private javax.swing.JComboBox<String> animPerson;
    private javax.swing.JLabel animPreLetra;
    private javax.swing.JComboBox<String> animPred;
    private javax.swing.JLabel animacLetra;
    private javax.swing.JLabel animarA;
    private javax.swing.JLabel añadirA;
    private javax.swing.JPanel back;
    private javax.swing.JPanel botonAnimar;
    private javax.swing.JPanel botonAñadir;
    private javax.swing.JPanel botonCrearFigComp;
    private javax.swing.JPanel botonEliTodo;
    private javax.swing.JPanel botonEliminar;
    private javax.swing.JPanel botonInicio;
    private javax.swing.JPanel botonParar;
    private javax.swing.JPanel botonMover;
    private javax.swing.JLabel compuestoLetra;
    private javax.swing.JLabel eliTodoA;
    private javax.swing.JLabel eliminarA;
    private javax.swing.JLabel moverA1;
    private javax.swing.JLabel figuraLetra;
    private javax.swing.JPanel head;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel letraCrearFigComp;
    private javax.swing.JComboBox<String> listaFigs;
    private javax.swing.JComboBox<String> listaSets;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel pararA;
    private javax.swing.JLabel pararAnimLetra;
    private javax.swing.JTextField posX;
    private javax.swing.JTextField posY;
    private javax.swing.JLabel posicionLetra;
    private javax.swing.JSeparator separador1;
    private javax.swing.JSeparator separador2;
    private javax.swing.JSeparator separador4;
    private javax.swing.JPanel setHerr;
    private javax.swing.JTable tabla;
    private javax.swing.JLabel x;
    private javax.swing.JLabel y;
    //private javax.swing.JButton botonVoz;
}